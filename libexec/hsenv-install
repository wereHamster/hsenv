#!/usr/bin/env bash
# Summary: Install a version of GHC.
#
# Usage: hsenv install <version>
#
# Versions should be in the form of N.N.N
#
# Bomb out if we hit an error, ever
set -e

# Verbose output in debug mode
[ -n "$HSENV_DEBUG" ] && {
  set -x
}

# Pull the desired version out of ARGV
version="$1"
version_dir="$HSENV_ROOT/versions/$version"
cabal_install_version="1.20.0.3"

# stash the pwd
OLDPWD=$(pwd)

# Determine url to download from
platform="$(uname -s | tr '[:upper:]' '[:lower:]')"
if [ "$platform" = "darwin" ]; then
  platform="apple-darwin"
elif [ "$platform" = "linux" ]; then
  platform="unknown-linux"
fi
arch="$(uname -m)"

build_dir="/tmp/hsenv-$version"
rm -rf $build_dir
mkdir -p $HSENV_ROOT/cache $build_dir $build_dir/ghc $build_dir/cabal-install

# Download and install GHC
download="http://downloads.haskell.org/~ghc/$version/ghc-$version-$arch-$platform.tar.xz"
ghc_cache_file="$HSENV_ROOT/cache/ghc-$version-$arch-$platform.tar.xz"
curl -sfC - -L -o $ghc_cache_file $download ||:
cd $build_dir/ghc
tar xf $ghc_cache_file --strip-components 1
./configure --prefix=$version_dir
make install

sed -i .bak -e 's#/usr/bin/gcc#/opt/boxen/homebrew/bin/gcc-4.8#' "$version_dir/lib/ghc-$version/settings"

# Download and install cabal-install
cabal_install_url="http://hackage.haskell.org/package/cabal-install-$cabal_install_version/cabal-install-$cabal_install_version.tar.gz"
cabal_install_cache_path="$HSENV_ROOT/cache/cabal-install-$cabal_install_version.tar.gz"
curl -sfC - -o $cabal_install_cache_path "$cabal_install_url" ||:
cd $build_dir/cabal-install
tar xf $cabal_install_cache_path --strip-components 1
$version_dir/bin/ghc-pkg init $build_dir/prefix
EXTRA_CONFIGURE_OPTS=--package-db=$build_dir/prefix \
  PATH=$version_dir/bin:$PATH PREFIX=$build_dir/prefix \
  sh ./bootstrap.sh --global

cp $build_dir/prefix/bin/cabal $version_dir/bin/
rm -rf $build_dir
chmod -R 755 $version_dir

echo "Installed $version"
cd $OLDPWD
